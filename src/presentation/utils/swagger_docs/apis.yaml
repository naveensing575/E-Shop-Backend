swagger: "2.0"
info:
  version: "1.0.0"
  title: "API Documentation"
basePath: "/"
schemes:
  - "http"
paths:
  /cart:
    get:
      summary: Retrieve user's cart
      description: Retrieve the cart items for the authenticated user
      tags:
        - Cart
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of cart items
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      summary: Add item to cart
      description: Add an item to the user's cart
      tags:
        - Cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId:
                  type: string
                  description: ID of the product to add to cart
                quantity:
                  type: number
                  description: Quantity of the product to add to cart
              required:
                - itemId
                - quantity
      responses:
        '201':
          description: Item successfully added to cart
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    put:
      summary: Update cart item
      description: Update the quantity of a specific item in the user's cart
      tags:
        - Cart
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: cartItemId
          required: true
          schema:
            type: string
          description: ID of the item in the cart to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
                  description: New quantity of the item in the cart
              required:
                - quantity
      responses:
        '200':
          description: Cart item updated successfully
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    delete:
      summary: Remove item from cart
      description: Remove a specific item from the user's cart
      tags:
        - Cart
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: cartItemId
          required: true
          schema:
            type: string
          description: ID of the item in the cart to remove
      responses:
        '200':
          description: Cart item removed successfully
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /orders/create:
  post:
    summary: Create an order
    description: Create a new order for the authenticated user
    tags:
      - Order
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              products:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
                      description: ID of the product to add to the order
                    quantity:
                      type: integer
                      description: Quantity of the product to add to the order
                  required:
                    - productId
                    - quantity
            required:
              - products
    responses:
      '201':
          description: Order created successfully
      '401':
          description: Unauthorized
      '500':
          description: Internal server error

  /orders/history:
    get:
      summary: Get purchase history
      description: Retrieve the purchase history of the authenticated user
      tags:
        - Order
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of orders
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /orders/{orderId}:
    get:
      summary: Get order by ID
      description: Retrieve a specific order by its ID
      tags:
        - Order
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          description: ID of the order to retrieve
      responses:
        '200':
          description: Order retrieved successfully
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /products:
    get:
      summary: Get all products
      description: Retrieve a list of all products
      tags:
        - Products
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of products
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /products/categories:
    get:
      summary: Get all categories
      description: Retrieve a list of all product categories
      tags:
        - Products
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of product categories
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /products/{id}:
    get:
      summary: Get product by ID
      description: Retrieve a product by its ID
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the product to retrieve
      responses:
        '200':
          description: A product object
        '401':
          description: Unauthorized
        '404':
          description: Product not found
        '500':
          description: Internal server error

  /users/register:
    post:
      summary: Register a new user
      description: Register a new user with the provided credentials
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user
                password:
                  type: string
                  description: The password of the user
                email:
                  type: string
                  description: The email address of the user
                firstName:
                  type: string
                  description: The first name of the user
                lastName:
                  type: string
                  description: The last name of the user
                address:
                  type: object
                  description: The address of the user
                phoneNumber:
                  type: string
                  description: The phone number of the user
              required:
                - username
                - password
                - email
                - firstName
                - lastName
                - address
                - phoneNumber
      responses:
        '201':
          description: User successfully registered
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /users/login:
    post:
      summary: User login
      description: Authenticate a user and generate an access token
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
             schema:
               type: object
               properties:
                 username:
                   type: string
                   description: The username of the user
                 password:
                   type: string
                   description: The password of the user
               required:
                 - username
                 - password
      responses:
        '200':
          description: User successfully logged in
        '401':
          description: Unauthorized
        '500':
          description: Internal server error